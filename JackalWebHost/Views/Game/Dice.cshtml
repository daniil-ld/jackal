<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="keywords" content="Jackal, Game">
    <meta name="description" content="Jackal Game">
    <link rel="icon" href="~/favicon.ico?20417786499" type="image/x-icon">
    <title>Jackal</title>
    @Styles.Render("~/bundle/styles")
    @Scripts.Render("~/bundle/scripts")

    <script src="~/Scripts/Chart.min.js"></script>

    <style>

    .back {width: 50px; height: 50px; border-width: 0px; margin: 15px;}

  	.digit_1 {
		background-image: url(/Content/Pictures/digits_small.jpg);
	}

	.digit_2 {
		background-image: url(/Content/Pictures/digits_small.jpg);
		background-position: 51px 0px;
	}

	.digit_3 {
		background-image: url(/Content/Pictures/digits_small.jpg);
		background-position: 0px -51px;
	}
		
	.digit_4 {
		background-image: url(/Content/Pictures/digits_small.jpg);
		background-position: 51px -51px;
	}

	.digit_5 {
		background-image: url(/Content/Pictures/digits_small.jpg);
		background-position: 0px -102px;
	}

	.digit_6 {
		background-image: url(/Content/Pictures/digits_small.jpg);
		background-position: 51px -102px;
	}

        #js-button-dice {

            border: 3px solid black;
            
        }

        body {
            width: 100%;
        }
    </style>

</head>
<body>
    <div class="container col-xs-12 col-lg-2">

        <div id="js-button-dice" class="row">
            <div class="row">
                <div class="col-xs-6">
                    <div id="js-first-dice" class="back digit_1 center-block"></div>
                </div>
                <div class="col-xs-6">
                    <div id="js-second-dice" class="back digit_2 center-block"></div>
                </div>
            </div>

            <div class="row">
                <div id="js-sum-dice" class="col-xs-2 col-xs-offset-4" style="font-size: 60px;">8</div>
            </div>
        </div>

        <div class="row">

            <button id="js-calc-chart">calculate chart</button>
            <canvas id="myChart" class="col-xs-12" height="400"></canvas>

        </div>
    </div>

    <script>

        $(document).ready(function () {

            $('#js-button-dice').click(function () {

                var dg = getRandomInt(1, 6);
                updateDice($('#js-first-dice'), dg);
                var dg2 = getRandomInt(1, 6);
                updateDice($('#js-second-dice'), dg2);

                $('#js-sum-dice').text(dg + dg2)
            });


            $('#js-calc-chart').click(function () {

                var options = {

                    ///Boolean - Whether grid lines are shown across the chart
                    scaleShowGridLines: true,

                    //String - Colour of the grid lines
                    scaleGridLineColor: "rgba(0,0,0,.05)",

                    //Number - Width of the grid lines
                    scaleGridLineWidth: 1,

                    //Boolean - Whether to show horizontal lines (except X axis)
                    scaleShowHorizontalLines: true,

                    //Boolean - Whether to show vertical lines (except Y axis)
                    scaleShowVerticalLines: true,

                    //Boolean - Whether the line is curved between points
                    bezierCurve: true,

                    //Number - Tension of the bezier curve between points
                    bezierCurveTension: 0.4,

                    //Boolean - Whether to show a dot for each point
                    pointDot: true,

                    //Number - Radius of each point dot in pixels
                    pointDotRadius: 4,

                    //Number - Pixel width of point dot stroke
                    pointDotStrokeWidth: 1,

                    //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
                    pointHitDetectionRadius: 20,

                    //Boolean - Whether to show a stroke for datasets
                    datasetStroke: true,

                    //Number - Pixel width of dataset stroke
                    datasetStrokeWidth: 2,

                    //Boolean - Whether to fill the dataset with a colour
                    datasetFill: true,

                    //String - A legend template
                    legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].strokeColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>"

                };


                var ctx = document.getElementById("myChart").getContext("2d");
                

                var data = {
                    labels: ["2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"],
                    datasets: [
                        {
                            label: "My First dataset",
                            fillColor: "rgba(220,220,220,0.2)",
                            strokeColor: "rgba(220,220,220,1)",
                            pointColor: "rgba(220,220,220,1)",
                            pointStrokeColor: "#fff",
                            pointHighlightFill: "#fff",
                            pointHighlightStroke: "rgba(220,220,220,1)",
                            data: getChartData(1000)
                        }
                    ]
                };

                var myLineChart = new Chart(ctx).Line(data, options);

            });
        });

        function updateDice(elm, digit) {

            elm.removeClass('digit_' + elm.val());
            elm.val(digit);
            elm.addClass('digit_' + elm.val());
        }

        function getRandomInt(min, max)
        {
            return Math.floor(Math.random() * (max - min + 1)) + min;
        }

        function getChartData(num) {

            var ret = [0,0,0,0,0,0,0,0,0,0,0];

            for (var i = 0 ; i < num ; ++i) {
                var dg = getRandomInt(1, 6);
                var dg2 = getRandomInt(1, 6);

                ret[dg + dg2 - 2]++;
            }

            return ret;
            //return [65, 59, 80, 81, 56, 55, 40, 81, 56, 55, 40];
        }
    </script>
</body>
</html>
